{"ast":null,"code":"// import axios from \"axios\";\n// import React, { createContext, useEffect, useState } from \"react\";\n// import { INews } from \"../types/news\";\n// export const NewsContext = createContext<INews | null>(null);\n// export const NewsContextProvider: React.FunctionComponent = ({ children }) => {\n//   const [news, setNews] = useState<INews>();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const data = await axios.get(\"https://newsapi.org/v2/top-headlines?country=id&apiKey=6ea25a8dca434dd38d9adfef34ecfa02\");\n//       setNews(data.data);\n//       console.log(data);\n//     };\n//     fetchData();\n//   }, []);\n//   return <NewsContext.Provider value={{ news, setNews }}>{children}</NewsContext.Provider>;\n// };\n// export const ThemeProvider: FC = ({ children }) => {\n//   const [dark, setDark] = useState(defaultState.dark);\n//   const toggleDark = () => {\n//     setDark(!dark);\n//   };\n//   return (\n//     <ThemeContext.Provider\n//       value={{\n//         dark,\n//         toggleDark,\n//       }}\n//     >\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n// import * as React from \"react\";\n// export interface ITodo {\n//   id: number;\n//   title: string;\n//   description: string;\n//   status: boolean;\n// }\n// export type TodoContextType = {\n//   todos: ITodo[];\n//   saveTodo: (todo: ITodo) => void;\n//   updateTodo: (id: number) => void;\n// };\n// export const TodoContext = React.createContext<TodoContextType | null>(null);\n// const TodoProvider: React.FC<React.ReactNode> = ({ children }) => {\n//   const [todos, setTodos] = React.useState<ITodo[]>([]);\n//   const saveTodo = (todo: ITodo) => {\n//     const newTodo: ITodo = {\n//       id: Math.random(), // not really unique - but fine for this example\n//       title: todo.title,\n//       description: todo.description,\n//       status: false,\n//     };\n//     setTodos([...todos, newTodo]);\n//   };\n//   const updateTodo = (id: number) => {\n//     todos.filter((todo: ITodo) => {\n//       if (todo.id === id) {\n//         todo.status = true;\n//         setTodos([...todos]);\n//       }\n//     });\n//   };\n//   return <TodoContext.Provider value={{ todos, saveTodo, updateTodo }}>{children}</TodoContext.Provider>;\n// };\n// export default TodoProvider;","map":{"version":3,"sources":["/Users/rizalmaulana/Documents/rizal-eigen-test/news-api/src/context/newsContext.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import axios from \"axios\";\n// import React, { createContext, useEffect, useState } from \"react\";\n// import { INews } from \"../types/news\";\n\n// export const NewsContext = createContext<INews | null>(null);\n\n// export const NewsContextProvider: React.FunctionComponent = ({ children }) => {\n//   const [news, setNews] = useState<INews>();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const data = await axios.get(\"https://newsapi.org/v2/top-headlines?country=id&apiKey=6ea25a8dca434dd38d9adfef34ecfa02\");\n//       setNews(data.data);\n//       console.log(data);\n//     };\n//     fetchData();\n//   }, []);\n\n//   return <NewsContext.Provider value={{ news, setNews }}>{children}</NewsContext.Provider>;\n// };\n\n// export const ThemeProvider: FC = ({ children }) => {\n//   const [dark, setDark] = useState(defaultState.dark);\n\n//   const toggleDark = () => {\n//     setDark(!dark);\n//   };\n\n//   return (\n//     <ThemeContext.Provider\n//       value={{\n//         dark,\n//         toggleDark,\n//       }}\n//     >\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\n// import * as React from \"react\";\n\n// export interface ITodo {\n//   id: number;\n//   title: string;\n//   description: string;\n//   status: boolean;\n// }\n// export type TodoContextType = {\n//   todos: ITodo[];\n//   saveTodo: (todo: ITodo) => void;\n//   updateTodo: (id: number) => void;\n// };\n// export const TodoContext = React.createContext<TodoContextType | null>(null);\n\n// const TodoProvider: React.FC<React.ReactNode> = ({ children }) => {\n//   const [todos, setTodos] = React.useState<ITodo[]>([]);\n//   const saveTodo = (todo: ITodo) => {\n//     const newTodo: ITodo = {\n//       id: Math.random(), // not really unique - but fine for this example\n//       title: todo.title,\n//       description: todo.description,\n//       status: false,\n//     };\n//     setTodos([...todos, newTodo]);\n//   };\n//   const updateTodo = (id: number) => {\n//     todos.filter((todo: ITodo) => {\n//       if (todo.id === id) {\n//         todo.status = true;\n//         setTodos([...todos]);\n//       }\n//     });\n//   };\n//   return <TodoContext.Provider value={{ todos, saveTodo, updateTodo }}>{children}</TodoContext.Provider>;\n// };\n\n// export default TodoProvider;\n"]},"metadata":{},"sourceType":"module"}