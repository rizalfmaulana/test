{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [news, setNews] = useState();\n  const [isError, setIsError] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(url);\n      setNews(response.data);\n    } catch (error) {\n      setIsError(true);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return {\n    isError,\n    news\n  };\n};\n\n_s(useFetch, \"tlyw+Yfp2EbCp60tM8KxVTADMNs=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/rizalmaulana/Documents/rizal-eigen-test/news-api/src/hooks/useFetch.ts"],"names":["axios","useEffect","useState","useFetch","url","news","setNews","isError","setIsError","fetchData","response","get","data","error","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAGA,MAAMC,QAAQ,GAAIC,GAAD,IAAiB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMO,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUP,GAAV,CAAvB;AACAE,MAAAA,OAAO,CAACI,QAAQ,CAACE,IAAV,CAAP;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GARD;;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAEF,IAAAA,OAAF;AAAWF,IAAAA;AAAX,GAAP;AACD,CAjBD;;GAAMF,Q;;AAkBN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { INews } from \"../types/news\";\n\nconst useFetch = (url: string) => {\n  const [news, setNews] = useState<INews>();\n  const [isError, setIsError] = useState(false);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(url);\n      setNews(response.data);\n    } catch (error) {\n      setIsError(true);\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return { isError, news };\n};\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}